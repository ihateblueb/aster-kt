## Name ##
# Display name for instance
##
name: "Aster"

## URL ##
# URL instance is to be accessible by.
# Do not reuse domains after starting an instance.
# Do not change after you start the instance for the first time.
##
url: "https://aster.example.com/"

host: "0.0.0.0"
port: 9782

## Debug ##
# Only enable if you need detailed information for development.
# Otherwise, this will needlessly slow down runtime.
##
debug: false

## Use default frontend ##
# Whether to use the frontend packaged with the server
# or to leave it up for plugins to handle.
# Disabling without a plugin to add an alternate frontend
# will make your instance unusable to most users.
builtinFrontend: true

## Registrations ##
# options:
#   open      - anyone can register
#   approval  - anyone can register but cannot use their account until approved
#   invite    - only people with invite codes can register
#   closed    - nobody can register
##
registrations: invite

## Identifiers ##
# ID format to use. Keep as default unless migrating from elsewhere.
# options: aidx, aid, uuid
##
identifiers: aidx

## Database ##
database:
  host: localhost
  port: 5432
  db: aster
  user: aster
  password: aster

## Queue ##
# Queues are how Aster handles federating and system tasks
#   threads: how many threads to have for a queue
#   concurrency: how many jobs can be run on a thread at a time
##
queue:
  inbox:
    concurrency: 8
  deliver:
    concurrency: 6
  system:
    concurrency: 4

## Timeline ##
# Default objects:
#   Too high of a number will allow users to cause more
#   strain on the server.
# Max objects:
#   Too high of a number will allow higher amounts if needed,
#   but not cause as much strain as a high default.
# Authentication:
#   You may want to make your timelines require auth if
#   your infrastructure can't handle extra pressure from
#   people outside your instance.
##
timeline:
  defaultObjects: 15
  maxObjects: 35

  local:
    authRequired: false
  bubble:
    authRequired: false
    hosts: [ ]
  public:
    authRequired: false

## File storage ##
# How to store files uploaded by users.
#   type:
#     local   - Store in local filesystem
#   localPath: Path to store files at
#   maxUploadSize: In MB, maximum file size
##
fileStorage:
  type: local
  localPath: '/var/lib/aster/files'
  maxUploadSize: 25

## Hide remote content ##
# This prevents potentially bad things to be hosted to the
# public on your instance. Only authenticated uses will be
# able to see remote content. Recommended to keep on, unless
# you're a very active moderator.
##
hideRemoteContent: true
